openapi: "3.0.1"
info:
  title: "aws-sam-sample"
  version: "1.0"
paths:
  /sample:
    get:
      parameters:
      - name: "height"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "weight"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOutput"
        "500":
          description: "500 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOutput"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOutput"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SampleGetFunction.Arn}/invocations
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET','OPTIONS','POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInput"
        required: true
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostOutput"
        "500":
          description: "500 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostOutput"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostOutput"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SamplePostFunction.Arn}/invocations
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
    PostInput:
      type: "object"
      properties:
        height:
          type: "string"
        weight:
          type: "string"
        comment:
          type: "string"
    PostOutput:
      type: "object"
      properties:
        message:
          type: "string"
        bmi:
          type: "string"
        healthy_weight:
          type: "string"
        your_comment:
          type: "string"
    GetOutput:
      type: "object"
      properties:
        message:
          type: "string"
        bmi:
          type: "string"
        healthy_weight:
          type: "string"
        your_comment:
          type: "string"