AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-sam-sample

  Sample SAM Template for aws-sam-sample

Globals:
  Function:
    Timeout: 3

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev

Resources:
  SampleGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub function-${AWS::StackName}-get
      CodeUri: src/
      Handler: api-get.lambda_handler
      Runtime: python3.7
      Events:
        SampleEvientGet:
          Type: Api
          Properties:
            Path: /sample
            Method: get
            RestApiId: !Ref SampleApi
  SamplePostFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub function-${AWS::StackName}-post
      CodeUri: src/
      Handler: api-post.lambda_handler
      Runtime: python3.7
      Events:
        SampleEvientPost:
          Type: Api
          Properties:
            Path: /sample
            Method: post
            RestApiId: !Ref SampleApi
  SampleApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Name: !Sub api-${AWS::StackName}
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: openapi.yml
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'